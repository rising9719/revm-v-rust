<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="805.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="8072"><g><title>[revm-8221a43e25ba76c9] (30 samples, 0.37%)</title><rect x="0.0000%" y="741" width="0.3717%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="30"/><text x="0.2500%" y="751.50"></text></g><g><title>revm::instructions::i256::tests::benchmark_div (30 samples, 0.37%)</title><rect x="0.0000%" y="725" width="0.3717%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="30"/><text x="0.2500%" y="735.50"></text></g><g><title>revm::instructions::i256::div_u256::div_mod (30 samples, 0.37%)</title><rect x="0.0000%" y="709" width="0.3717%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="30"/><text x="0.2500%" y="719.50"></text></g><g><title>revm::instructions::i256::div_u256::div_mod_knuth (30 samples, 0.37%)</title><rect x="0.0000%" y="693" width="0.3717%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="30"/><text x="0.2500%" y="703.50"></text></g><g><title>revm::instructions::i256::div_u256::full_shl (30 samples, 0.37%)</title><rect x="0.0000%" y="677" width="0.3717%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="30"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::ShlAssign&lt;T&gt;&gt;::shl_assign (116 samples, 1.44%)</title><rect x="0.3717%" y="725" width="1.4371%" height="15" fill="rgb(232,128,0)" fg:x="30" fg:w="116"/><text x="0.6217%" y="735.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (17 samples, 0.21%)</title><rect x="1.5981%" y="709" width="0.2106%" height="15" fill="rgb(207,160,47)" fg:x="129" fg:w="17"/><text x="1.8481%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.21%)</title><rect x="1.5981%" y="693" width="0.2106%" height="15" fill="rgb(228,23,34)" fg:x="129" fg:w="17"/><text x="1.8481%" y="703.50"></text></g><g><title>[unknown] (165 samples, 2.04%)</title><rect x="0.3717%" y="741" width="2.0441%" height="15" fill="rgb(218,30,26)" fg:x="30" fg:w="165"/><text x="0.6217%" y="751.50">[..</text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shr&lt;T&gt;&gt;::shr (49 samples, 0.61%)</title><rect x="1.8087%" y="725" width="0.6070%" height="15" fill="rgb(220,122,19)" fg:x="146" fg:w="49"/><text x="2.0587%" y="735.50"></text></g><g><title>primitive_types::U256::bits (21 samples, 0.26%)</title><rect x="3.1219%" y="341" width="0.2602%" height="15" fill="rgb(250,228,42)" fg:x="252" fg:w="21"/><text x="3.3719%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (12 samples, 0.15%)</title><rect x="3.2334%" y="325" width="0.1487%" height="15" fill="rgb(240,193,28)" fg:x="261" fg:w="12"/><text x="3.4834%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="277" width="0.0248%" height="15" fill="rgb(216,20,37)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="261" width="0.0248%" height="15" fill="rgb(206,188,39)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="245" width="0.0248%" height="15" fill="rgb(217,207,13)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="229" width="0.0248%" height="15" fill="rgb(231,73,38)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="213" width="0.0248%" height="15" fill="rgb(225,20,46)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="197" width="0.0248%" height="15" fill="rgb(210,31,41)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="181" width="0.0248%" height="15" fill="rgb(221,200,47)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="165" width="0.0248%" height="15" fill="rgb(226,26,5)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="149" width="0.0248%" height="15" fill="rgb(249,33,26)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="133" width="0.0248%" height="15" fill="rgb(235,183,28)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="117" width="0.0248%" height="15" fill="rgb(221,5,38)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="18.1987%" y="101" width="0.0248%" height="15" fill="rgb(247,18,42)" fg:x="1469" fg:w="2"/><text x="18.4487%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (414 samples, 5.13%)</title><rect x="16.3404%" y="325" width="5.1288%" height="15" fill="rgb(241,131,45)" fg:x="1319" fg:w="414"/><text x="16.5904%" y="335.50">&lt;core:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next_back (414 samples, 5.13%)</title><rect x="16.3404%" y="309" width="5.1288%" height="15" fill="rgb(249,31,29)" fg:x="1319" fg:w="414"/><text x="16.5904%" y="319.50">core::..</text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next_back (414 samples, 5.13%)</title><rect x="16.3404%" y="293" width="5.1288%" height="15" fill="rgb(225,111,53)" fg:x="1319" fg:w="414"/><text x="16.5904%" y="303.50">&lt;core:..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (262 samples, 3.25%)</title><rect x="18.2235%" y="277" width="3.2458%" height="15" fill="rgb(238,160,17)" fg:x="1471" fg:w="262"/><text x="18.4735%" y="287.50">cor..</text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="261" width="0.0372%" height="15" fill="rgb(214,148,48)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="245" width="0.0372%" height="15" fill="rgb(232,36,49)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="229" width="0.0372%" height="15" fill="rgb(209,103,24)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="213" width="0.0372%" height="15" fill="rgb(229,88,8)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="197" width="0.0372%" height="15" fill="rgb(213,181,19)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="181" width="0.0372%" height="15" fill="rgb(254,191,54)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="165" width="0.0372%" height="15" fill="rgb(241,83,37)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="149" width="0.0372%" height="15" fill="rgb(233,36,39)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="133" width="0.0372%" height="15" fill="rgb(226,3,54)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="117" width="0.0372%" height="15" fill="rgb(245,192,40)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="101" width="0.0372%" height="15" fill="rgb(238,167,29)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="21.4321%" y="85" width="0.0372%" height="15" fill="rgb(232,182,51)" fg:x="1730" fg:w="3"/><text x="21.6821%" y="95.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (55 samples, 0.68%)</title><rect x="30.4633%" y="293" width="0.6814%" height="15" fill="rgb(231,60,39)" fg:x="2459" fg:w="55"/><text x="30.7133%" y="303.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;u32&gt;&gt;::from (55 samples, 0.68%)</title><rect x="30.4633%" y="277" width="0.6814%" height="15" fill="rgb(208,69,12)" fg:x="2459" fg:w="55"/><text x="30.7133%" y="287.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;u64&gt;&gt;::from (24 samples, 0.30%)</title><rect x="30.8474%" y="261" width="0.2973%" height="15" fill="rgb(235,93,37)" fg:x="2490" fg:w="24"/><text x="31.0974%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="293" width="0.0743%" height="15" fill="rgb(213,116,39)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="277" width="0.0743%" height="15" fill="rgb(222,207,29)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="261" width="0.0743%" height="15" fill="rgb(206,96,30)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="245" width="0.0743%" height="15" fill="rgb(218,138,4)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="229" width="0.0743%" height="15" fill="rgb(250,191,14)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="213" width="0.0743%" height="15" fill="rgb(239,60,40)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="197" width="0.0743%" height="15" fill="rgb(206,27,48)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="181" width="0.0743%" height="15" fill="rgb(225,35,8)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="165" width="0.0743%" height="15" fill="rgb(250,213,24)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="149" width="0.0743%" height="15" fill="rgb(247,123,22)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="133" width="0.0743%" height="15" fill="rgb(231,138,38)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="31.1447%" y="117" width="0.0743%" height="15" fill="rgb(231,145,46)" fg:x="2514" fg:w="6"/><text x="31.3947%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.2066%" y="101" width="0.0124%" height="15" fill="rgb(251,118,11)" fg:x="2519" fg:w="1"/><text x="31.4566%" y="111.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (13 samples, 0.16%)</title><rect x="31.2190%" y="261" width="0.1611%" height="15" fill="rgb(217,147,25)" fg:x="2520" fg:w="13"/><text x="31.4690%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (13 samples, 0.16%)</title><rect x="31.2190%" y="245" width="0.1611%" height="15" fill="rgb(247,81,37)" fg:x="2520" fg:w="13"/><text x="31.4690%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="229" width="0.0124%" height="15" fill="rgb(209,12,38)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="213" width="0.0124%" height="15" fill="rgb(227,1,9)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="197" width="0.0124%" height="15" fill="rgb(248,47,43)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="181" width="0.0124%" height="15" fill="rgb(221,10,30)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="165" width="0.0124%" height="15" fill="rgb(210,229,1)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="149" width="0.0124%" height="15" fill="rgb(222,148,37)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="133" width="0.0124%" height="15" fill="rgb(234,67,33)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="117" width="0.0124%" height="15" fill="rgb(247,98,35)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="101" width="0.0124%" height="15" fill="rgb(247,138,52)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="85" width="0.0124%" height="15" fill="rgb(213,79,30)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="69" width="0.0124%" height="15" fill="rgb(246,177,23)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.3677%" y="53" width="0.0124%" height="15" fill="rgb(230,62,27)" fg:x="2532" fg:w="1"/><text x="31.6177%" y="63.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (42 samples, 0.52%)</title><rect x="31.2190%" y="293" width="0.5203%" height="15" fill="rgb(216,154,8)" fg:x="2520" fg:w="42"/><text x="31.4690%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (42 samples, 0.52%)</title><rect x="31.2190%" y="277" width="0.5203%" height="15" fill="rgb(244,35,45)" fg:x="2520" fg:w="42"/><text x="31.4690%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (29 samples, 0.36%)</title><rect x="31.3801%" y="261" width="0.3593%" height="15" fill="rgb(251,115,12)" fg:x="2533" fg:w="29"/><text x="31.6301%" y="271.50"></text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::ShlAssign&lt;T&gt;&gt;::shl_assign (871 samples, 10.79%)</title><rect x="21.4693%" y="325" width="10.7904%" height="15" fill="rgb(240,54,50)" fg:x="1733" fg:w="871"/><text x="21.7193%" y="335.50">&lt;primitive_types..</text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shl&lt;T&gt;&gt;::shl (830 samples, 10.28%)</title><rect x="21.9772%" y="309" width="10.2825%" height="15" fill="rgb(233,84,52)" fg:x="1774" fg:w="830"/><text x="22.2272%" y="319.50">&lt;primitive_type..</text></g><g><title>primitive_types::U256::as_usize (42 samples, 0.52%)</title><rect x="31.7393%" y="293" width="0.5203%" height="15" fill="rgb(207,117,47)" fg:x="2562" fg:w="42"/><text x="31.9893%" y="303.50"></text></g><g><title>primitive_types::U256::fits_word (28 samples, 0.35%)</title><rect x="31.9128%" y="277" width="0.3469%" height="15" fill="rgb(249,43,39)" fg:x="2576" fg:w="28"/><text x="32.1628%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="32.2597%" y="325" width="0.0743%" height="15" fill="rgb(209,38,44)" fg:x="2604" fg:w="6"/><text x="32.5097%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="309" width="0.0619%" height="15" fill="rgb(236,212,23)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="293" width="0.0619%" height="15" fill="rgb(242,79,21)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="277" width="0.0619%" height="15" fill="rgb(211,96,35)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="261" width="0.0619%" height="15" fill="rgb(253,215,40)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="245" width="0.0619%" height="15" fill="rgb(211,81,21)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="229" width="0.0619%" height="15" fill="rgb(208,190,38)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="213" width="0.0619%" height="15" fill="rgb(235,213,38)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="197" width="0.0619%" height="15" fill="rgb(237,122,38)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="181" width="0.0619%" height="15" fill="rgb(244,218,35)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="165" width="0.0619%" height="15" fill="rgb(240,68,47)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="32.2721%" y="149" width="0.0619%" height="15" fill="rgb(210,16,53)" fg:x="2605" fg:w="5"/><text x="32.5221%" y="159.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (9 samples, 0.11%)</title><rect x="32.3340%" y="325" width="0.1115%" height="15" fill="rgb(235,124,12)" fg:x="2610" fg:w="9"/><text x="32.5840%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9 samples, 0.11%)</title><rect x="32.3340%" y="309" width="0.1115%" height="15" fill="rgb(224,169,11)" fg:x="2610" fg:w="9"/><text x="32.5840%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (9 samples, 0.11%)</title><rect x="32.3340%" y="293" width="0.1115%" height="15" fill="rgb(250,166,2)" fg:x="2610" fg:w="9"/><text x="32.5840%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="32.4331%" y="277" width="0.0124%" height="15" fill="rgb(242,216,29)" fg:x="2618" fg:w="1"/><text x="32.6831%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="32.4331%" y="261" width="0.0124%" height="15" fill="rgb(230,116,27)" fg:x="2618" fg:w="1"/><text x="32.6831%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="32.4331%" y="245" width="0.0124%" height="15" fill="rgb(228,99,48)" fg:x="2618" fg:w="1"/><text x="32.6831%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="32.4331%" y="229" width="0.0124%" height="15" fill="rgb(253,11,6)" fg:x="2618" fg:w="1"/><text x="32.6831%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (24 samples, 0.30%)</title><rect x="32.4455%" y="325" width="0.2973%" height="15" fill="rgb(247,143,39)" fg:x="2619" fg:w="24"/><text x="32.6955%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="309" width="0.0619%" height="15" fill="rgb(236,97,10)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="293" width="0.0619%" height="15" fill="rgb(233,208,19)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="277" width="0.0619%" height="15" fill="rgb(216,164,2)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="261" width="0.0619%" height="15" fill="rgb(220,129,5)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="245" width="0.0619%" height="15" fill="rgb(242,17,10)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="229" width="0.0619%" height="15" fill="rgb(242,107,0)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="213" width="0.0619%" height="15" fill="rgb(251,28,31)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="197" width="0.0619%" height="15" fill="rgb(233,223,10)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="181" width="0.0619%" height="15" fill="rgb(215,21,27)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="165" width="0.0619%" height="15" fill="rgb(232,23,21)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="149" width="0.0619%" height="15" fill="rgb(244,5,23)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="34.2542%" y="133" width="0.0619%" height="15" fill="rgb(226,81,46)" fg:x="2765" fg:w="5"/><text x="34.5042%" y="143.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (A,B)&gt;::le (156 samples, 1.93%)</title><rect x="32.7428%" y="325" width="1.9326%" height="15" fill="rgb(247,70,30)" fg:x="2643" fg:w="156"/><text x="32.9928%" y="335.50">c..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::ne (29 samples, 0.36%)</title><rect x="34.3162%" y="309" width="0.3593%" height="15" fill="rgb(212,68,19)" fg:x="2770" fg:w="29"/><text x="34.5662%" y="319.50"></text></g><g><title>primitive_types::U256::zero (1 samples, 0.01%)</title><rect x="34.6754%" y="325" width="0.0124%" height="15" fill="rgb(240,187,13)" fg:x="2799" fg:w="1"/><text x="34.9254%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="309" width="0.1115%" height="15" fill="rgb(223,113,26)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="293" width="0.1115%" height="15" fill="rgb(206,192,2)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="277" width="0.1115%" height="15" fill="rgb(241,108,4)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="261" width="0.1115%" height="15" fill="rgb(247,173,49)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="271.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="245" width="0.1115%" height="15" fill="rgb(224,114,35)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="255.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="229" width="0.1115%" height="15" fill="rgb(245,159,27)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="239.50"></text></g><g><title>[unknown] (9 samples, 0.11%)</title><rect x="70.7631%" y="213" width="0.1115%" height="15" fill="rgb(245,172,44)" fg:x="5712" fg:w="9"/><text x="71.0131%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="70.7755%" y="197" width="0.0991%" height="15" fill="rgb(236,23,11)" fg:x="5713" fg:w="8"/><text x="71.0255%" y="207.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="70.7755%" y="181" width="0.0991%" height="15" fill="rgb(205,117,38)" fg:x="5713" fg:w="8"/><text x="71.0255%" y="191.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="70.7755%" y="165" width="0.0991%" height="15" fill="rgb(237,72,25)" fg:x="5713" fg:w="8"/><text x="71.0255%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="70.7879%" y="149" width="0.0867%" height="15" fill="rgb(244,70,9)" fg:x="5714" fg:w="7"/><text x="71.0379%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="70.8003%" y="133" width="0.0743%" height="15" fill="rgb(217,125,39)" fg:x="5715" fg:w="6"/><text x="71.0503%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_shr (65 samples, 0.81%)</title><rect x="70.8746%" y="309" width="0.8053%" height="15" fill="rgb(235,36,10)" fg:x="5721" fg:w="65"/><text x="71.1246%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_shr (65 samples, 0.81%)</title><rect x="70.8746%" y="293" width="0.8053%" height="15" fill="rgb(251,123,47)" fg:x="5721" fg:w="65"/><text x="71.1246%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shr (65 samples, 0.81%)</title><rect x="70.8746%" y="277" width="0.8053%" height="15" fill="rgb(221,13,13)" fg:x="5721" fg:w="65"/><text x="71.1246%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (45 samples, 0.56%)</title><rect x="71.6799%" y="309" width="0.5575%" height="15" fill="rgb(238,131,9)" fg:x="5786" fg:w="45"/><text x="71.9299%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (60 samples, 0.74%)</title><rect x="72.2374%" y="309" width="0.7433%" height="15" fill="rgb(211,50,8)" fg:x="5831" fg:w="60"/><text x="72.4874%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (104 samples, 1.29%)</title><rect x="72.9807%" y="309" width="1.2884%" height="15" fill="rgb(245,182,24)" fg:x="5891" fg:w="104"/><text x="73.2307%" y="319.50"></text></g><g><title>revm::instructions::i256::div_u256::div_mod_word (3,205 samples, 39.71%)</title><rect x="34.6878%" y="325" width="39.7052%" height="15" fill="rgb(242,14,37)" fg:x="2800" fg:w="3205"/><text x="34.9378%" y="335.50">revm::instructions::i256::div_u256::div_mod_word</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (10 samples, 0.12%)</title><rect x="74.2691%" y="309" width="0.1239%" height="15" fill="rgb(246,228,12)" fg:x="5995" fg:w="10"/><text x="74.5191%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (51 samples, 0.63%)</title><rect x="74.7646%" y="309" width="0.6318%" height="15" fill="rgb(213,55,15)" fg:x="6035" fg:w="51"/><text x="75.0146%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.63%)</title><rect x="74.7646%" y="293" width="0.6318%" height="15" fill="rgb(209,9,3)" fg:x="6035" fg:w="51"/><text x="75.0146%" y="303.50"></text></g><g><title>revm::instructions::i256::div_u256::full_mul_u64 (321 samples, 3.98%)</title><rect x="74.3930%" y="325" width="3.9767%" height="15" fill="rgb(230,59,30)" fg:x="6005" fg:w="321"/><text x="74.6430%" y="335.50">revm..</text></g><g><title>revm::instructions::i256::div_u256::overflowing_mul_u64 (240 samples, 2.97%)</title><rect x="75.3964%" y="309" width="2.9732%" height="15" fill="rgb(209,121,21)" fg:x="6086" fg:w="240"/><text x="75.6464%" y="319.50">rev..</text></g><g><title>revm::instructions::i256::div_u256::mul_u64 (240 samples, 2.97%)</title><rect x="75.3964%" y="293" width="2.9732%" height="15" fill="rgb(220,109,13)" fg:x="6086" fg:w="240"/><text x="75.6464%" y="303.50">rev..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="277" width="0.0124%" height="15" fill="rgb(232,18,1)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="261" width="0.0124%" height="15" fill="rgb(215,41,42)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="245" width="0.0124%" height="15" fill="rgb(224,123,36)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="229" width="0.0124%" height="15" fill="rgb(240,125,3)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="213" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="197" width="0.0124%" height="15" fill="rgb(205,185,37)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="181" width="0.0124%" height="15" fill="rgb(238,207,15)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="165" width="0.0124%" height="15" fill="rgb(213,199,42)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="149" width="0.0124%" height="15" fill="rgb(235,201,11)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="133" width="0.0124%" height="15" fill="rgb(207,46,11)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="117" width="0.0124%" height="15" fill="rgb(241,35,35)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="78.3573%" y="101" width="0.0124%" height="15" fill="rgb(243,32,47)" fg:x="6325" fg:w="1"/><text x="78.6073%" y="111.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (69 samples, 0.85%)</title><rect x="84.1551%" y="293" width="0.8548%" height="15" fill="rgb(247,202,23)" fg:x="6793" fg:w="69"/><text x="84.4051%" y="303.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;u32&gt;&gt;::from (45 samples, 0.56%)</title><rect x="84.4524%" y="277" width="0.5575%" height="15" fill="rgb(219,102,11)" fg:x="6817" fg:w="45"/><text x="84.7024%" y="287.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;u64&gt;&gt;::from (18 samples, 0.22%)</title><rect x="84.7869%" y="261" width="0.2230%" height="15" fill="rgb(243,110,44)" fg:x="6844" fg:w="18"/><text x="85.0369%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="293" width="0.0124%" height="15" fill="rgb(222,74,54)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="277" width="0.0124%" height="15" fill="rgb(216,99,12)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="261" width="0.0124%" height="15" fill="rgb(226,22,26)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="245" width="0.0124%" height="15" fill="rgb(217,163,10)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="229" width="0.0124%" height="15" fill="rgb(213,25,53)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="213" width="0.0124%" height="15" fill="rgb(252,105,26)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="197" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="181" width="0.0124%" height="15" fill="rgb(229,68,48)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="165" width="0.0124%" height="15" fill="rgb(252,8,32)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="149" width="0.0124%" height="15" fill="rgb(223,20,43)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="133" width="0.0124%" height="15" fill="rgb(229,81,49)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.0099%" y="117" width="0.0124%" height="15" fill="rgb(236,28,36)" fg:x="6862" fg:w="1"/><text x="85.2599%" y="127.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.01%)</title><rect x="85.0223%" y="261" width="0.0124%" height="15" fill="rgb(249,185,26)" fg:x="6863" fg:w="1"/><text x="85.2723%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.01%)</title><rect x="85.0223%" y="245" width="0.0124%" height="15" fill="rgb(249,174,33)" fg:x="6863" fg:w="1"/><text x="85.2723%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.28%)</title><rect x="85.0223%" y="293" width="0.2849%" height="15" fill="rgb(233,201,37)" fg:x="6863" fg:w="23"/><text x="85.2723%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.28%)</title><rect x="85.0223%" y="277" width="0.2849%" height="15" fill="rgb(221,78,26)" fg:x="6863" fg:w="23"/><text x="85.2723%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (22 samples, 0.27%)</title><rect x="85.0347%" y="261" width="0.2725%" height="15" fill="rgb(250,127,30)" fg:x="6864" fg:w="22"/><text x="85.2847%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="277" width="0.0124%" height="15" fill="rgb(230,49,44)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="261" width="0.0124%" height="15" fill="rgb(229,67,23)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="245" width="0.0124%" height="15" fill="rgb(249,83,47)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="229" width="0.0124%" height="15" fill="rgb(215,43,3)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="213" width="0.0124%" height="15" fill="rgb(238,154,13)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="197" width="0.0124%" height="15" fill="rgb(219,56,2)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="181" width="0.0124%" height="15" fill="rgb(233,0,4)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="85.3196%" y="165" width="0.0124%" height="15" fill="rgb(235,30,7)" fg:x="6887" fg:w="1"/><text x="85.5696%" y="175.50"></text></g><g><title>revm::instructions::i256::div_u256::full_shl (616 samples, 7.63%)</title><rect x="78.3697%" y="325" width="7.6313%" height="15" fill="rgb(250,79,13)" fg:x="6326" fg:w="616"/><text x="78.6197%" y="335.50">revm::inst..</text></g><g><title>&lt;primitive_types::U256 as core::ops::bit::Shr&lt;T&gt;&gt;::shr (491 samples, 6.08%)</title><rect x="79.9182%" y="309" width="6.0828%" height="15" fill="rgb(211,146,34)" fg:x="6451" fg:w="491"/><text x="80.1682%" y="319.50">&lt;primiti..</text></g><g><title>primitive_types::U256::as_usize (56 samples, 0.69%)</title><rect x="85.3072%" y="293" width="0.6938%" height="15" fill="rgb(228,22,38)" fg:x="6886" fg:w="56"/><text x="85.5572%" y="303.50"></text></g><g><title>primitive_types::U256::fits_word (54 samples, 0.67%)</title><rect x="85.3320%" y="277" width="0.6690%" height="15" fill="rgb(235,168,5)" fg:x="6888" fg:w="54"/><text x="85.5820%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="309" width="0.0867%" height="15" fill="rgb(221,155,16)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="293" width="0.0867%" height="15" fill="rgb(215,215,53)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="277" width="0.0867%" height="15" fill="rgb(223,4,10)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="261" width="0.0867%" height="15" fill="rgb(234,103,6)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="245" width="0.0867%" height="15" fill="rgb(227,97,0)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.09%)</title><rect x="91.0927%" y="229" width="0.0867%" height="15" fill="rgb(234,150,53)" fg:x="7353" fg:w="7"/><text x="91.3427%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="213" width="0.0743%" height="15" fill="rgb(228,201,54)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="197" width="0.0743%" height="15" fill="rgb(222,22,37)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="181" width="0.0743%" height="15" fill="rgb(237,53,32)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="165" width="0.0743%" height="15" fill="rgb(233,25,53)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="149" width="0.0743%" height="15" fill="rgb(210,40,34)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="91.1051%" y="133" width="0.0743%" height="15" fill="rgb(241,220,44)" fg:x="7354" fg:w="6"/><text x="91.3551%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="91.1298%" y="117" width="0.0496%" height="15" fill="rgb(235,28,35)" fg:x="7356" fg:w="4"/><text x="91.3798%" y="127.50"></text></g><g><title>revm::instructions::i256::div_u256::full_shr (513 samples, 6.36%)</title><rect x="86.0010%" y="325" width="6.3553%" height="15" fill="rgb(210,56,17)" fg:x="6942" fg:w="513"/><text x="86.2510%" y="335.50">revm::in..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (95 samples, 1.18%)</title><rect x="91.1794%" y="309" width="1.1769%" height="15" fill="rgb(224,130,29)" fg:x="7360" fg:w="95"/><text x="91.4294%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (95 samples, 1.18%)</title><rect x="91.1794%" y="293" width="1.1769%" height="15" fill="rgb(235,212,8)" fg:x="7360" fg:w="95"/><text x="91.4294%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (87 samples, 1.08%)</title><rect x="91.2785%" y="277" width="1.0778%" height="15" fill="rgb(223,33,50)" fg:x="7368" fg:w="87"/><text x="91.5285%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 1.77%)</title><rect x="93.1739%" y="261" width="1.7716%" height="15" fill="rgb(219,149,13)" fg:x="7521" fg:w="143"/><text x="93.4239%" y="271.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (143 samples, 1.77%)</title><rect x="93.1739%" y="245" width="1.7716%" height="15" fill="rgb(250,156,29)" fg:x="7521" fg:w="143"/><text x="93.4239%" y="255.50">&lt;..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="213" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="197" width="0.0124%" height="15" fill="rgb(216,135,14)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="181" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="165" width="0.0124%" height="15" fill="rgb(233,42,35)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="149" width="0.0124%" height="15" fill="rgb(231,13,6)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="133" width="0.0124%" height="15" fill="rgb(207,181,40)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="117" width="0.0124%" height="15" fill="rgb(254,173,49)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="101" width="0.0124%" height="15" fill="rgb(221,1,38)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="85" width="0.0124%" height="15" fill="rgb(206,124,46)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="69" width="0.0124%" height="15" fill="rgb(249,21,11)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="53" width="0.0124%" height="15" fill="rgb(222,201,40)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.0302%" y="37" width="0.0124%" height="15" fill="rgb(235,61,29)" fg:x="7913" fg:w="1"/><text x="98.2802%" y="47.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (53 samples, 0.66%)</title><rect x="98.0426%" y="213" width="0.6566%" height="15" fill="rgb(219,207,3)" fg:x="7914" fg:w="53"/><text x="98.2926%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (547 samples, 6.78%)</title><rect x="92.3563%" y="293" width="6.7765%" height="15" fill="rgb(222,56,46)" fg:x="7455" fg:w="547"/><text x="92.6063%" y="303.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (547 samples, 6.78%)</title><rect x="92.3563%" y="277" width="6.7765%" height="15" fill="rgb(239,76,54)" fg:x="7455" fg:w="547"/><text x="92.6063%" y="287.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (338 samples, 4.19%)</title><rect x="94.9455%" y="261" width="4.1873%" height="15" fill="rgb(231,124,27)" fg:x="7664" fg:w="338"/><text x="95.1955%" y="271.50">core:..</text></g><g><title>revm::instructions::i256::div_u256::binop_slice::{{closure}} (338 samples, 4.19%)</title><rect x="94.9455%" y="245" width="4.1873%" height="15" fill="rgb(249,195,6)" fg:x="7664" fg:w="338"/><text x="95.1955%" y="255.50">revm:..</text></g><g><title>revm::instructions::i256::div_u256::binop_carry (197 samples, 2.44%)</title><rect x="96.6923%" y="229" width="2.4405%" height="15" fill="rgb(237,174,47)" fg:x="7805" fg:w="197"/><text x="96.9423%" y="239.50">re..</text></g><g><title>core::ops::function::Fn::call (35 samples, 0.43%)</title><rect x="98.6992%" y="213" width="0.4336%" height="15" fill="rgb(206,201,31)" fg:x="7967" fg:w="35"/><text x="98.9492%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_sub (35 samples, 0.43%)</title><rect x="98.6992%" y="197" width="0.4336%" height="15" fill="rgb(231,57,52)" fg:x="7967" fg:w="35"/><text x="98.9492%" y="207.50"></text></g><g><title>core::cmp::min (5 samples, 0.06%)</title><rect x="99.1328%" y="245" width="0.0619%" height="15" fill="rgb(248,177,22)" fg:x="8002" fg:w="5"/><text x="99.3828%" y="255.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.06%)</title><rect x="99.1328%" y="229" width="0.0619%" height="15" fill="rgb(215,211,37)" fg:x="8002" fg:w="5"/><text x="99.3828%" y="239.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.06%)</title><rect x="99.1328%" y="213" width="0.0619%" height="15" fill="rgb(241,128,51)" fg:x="8002" fg:w="5"/><text x="99.3828%" y="223.50"></text></g><g><title>revm::instructions::i256::div_u256::div_mod_knuth (7,778 samples, 96.36%)</title><rect x="3.3821%" y="341" width="96.3578%" height="15" fill="rgb(227,165,31)" fg:x="273" fg:w="7778"/><text x="3.6321%" y="351.50">revm::instructions::i256::div_u256::div_mod_knuth</text></g><g><title>revm::instructions::i256::div_u256::sub_slice (596 samples, 7.38%)</title><rect x="92.3563%" y="325" width="7.3835%" height="15" fill="rgb(228,167,24)" fg:x="7455" fg:w="596"/><text x="92.6063%" y="335.50">revm::inst..</text></g><g><title>revm::instructions::i256::div_u256::binop_slice (596 samples, 7.38%)</title><rect x="92.3563%" y="309" width="7.3835%" height="15" fill="rgb(228,143,12)" fg:x="7455" fg:w="596"/><text x="92.6063%" y="319.50">revm::inst..</text></g><g><title>core::iter::traits::iterator::Iterator::zip (49 samples, 0.61%)</title><rect x="99.1328%" y="293" width="0.6070%" height="15" fill="rgb(249,149,8)" fg:x="8002" fg:w="49"/><text x="99.3828%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (49 samples, 0.61%)</title><rect x="99.1328%" y="277" width="0.6070%" height="15" fill="rgb(243,35,44)" fg:x="8002" fg:w="49"/><text x="99.3828%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (49 samples, 0.61%)</title><rect x="99.1328%" y="261" width="0.6070%" height="15" fill="rgb(246,89,9)" fg:x="8002" fg:w="49"/><text x="99.3828%" y="271.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (44 samples, 0.55%)</title><rect x="99.1947%" y="245" width="0.5451%" height="15" fill="rgb(233,213,13)" fg:x="8007" fg:w="44"/><text x="99.4447%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (44 samples, 0.55%)</title><rect x="99.1947%" y="229" width="0.5451%" height="15" fill="rgb(233,141,41)" fg:x="8007" fg:w="44"/><text x="99.4447%" y="239.50"></text></g><g><title>std::panic::catch_unwind (7,864 samples, 97.42%)</title><rect x="2.4158%" y="629" width="97.4232%" height="15" fill="rgb(239,167,4)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,864 samples, 97.42%)</title><rect x="2.4158%" y="613" width="97.4232%" height="15" fill="rgb(209,217,16)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,864 samples, 97.42%)</title><rect x="2.4158%" y="597" width="97.4232%" height="15" fill="rgb(219,88,35)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="607.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,864 samples, 97.42%)</title><rect x="2.4158%" y="581" width="97.4232%" height="15" fill="rgb(220,193,23)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="591.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7,864 samples, 97.42%)</title><rect x="2.4158%" y="565" width="97.4232%" height="15" fill="rgb(230,90,52)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="575.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,864 samples, 97.42%)</title><rect x="2.4158%" y="549" width="97.4232%" height="15" fill="rgb(252,106,19)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>test::run_test::run_test_inner::{{closure}} (7,864 samples, 97.42%)</title><rect x="2.4158%" y="533" width="97.4232%" height="15" fill="rgb(206,74,20)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="543.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test::run_test_inner::{{closure}} (7,864 samples, 97.42%)</title><rect x="2.4158%" y="517" width="97.4232%" height="15" fill="rgb(230,138,44)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="527.50">test::run_test::run_test_inner::{{closure}}</text></g><g><title>test::run_test_in_process (7,864 samples, 97.42%)</title><rect x="2.4158%" y="501" width="97.4232%" height="15" fill="rgb(235,182,43)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="511.50">test::run_test_in_process</text></g><g><title>std::panic::catch_unwind (7,864 samples, 97.42%)</title><rect x="2.4158%" y="485" width="97.4232%" height="15" fill="rgb(242,16,51)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,864 samples, 97.42%)</title><rect x="2.4158%" y="469" width="97.4232%" height="15" fill="rgb(248,9,4)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,864 samples, 97.42%)</title><rect x="2.4158%" y="453" width="97.4232%" height="15" fill="rgb(210,31,22)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="463.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,864 samples, 97.42%)</title><rect x="2.4158%" y="437" width="97.4232%" height="15" fill="rgb(239,54,39)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="447.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,864 samples, 97.42%)</title><rect x="2.4158%" y="421" width="97.4232%" height="15" fill="rgb(230,99,41)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="431.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>test::__rust_begin_short_backtrace (7,864 samples, 97.42%)</title><rect x="2.4158%" y="405" width="97.4232%" height="15" fill="rgb(253,106,12)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="415.50">test::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (7,864 samples, 97.42%)</title><rect x="2.4158%" y="389" width="97.4232%" height="15" fill="rgb(213,46,41)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="399.50">core::ops::function::FnOnce::call_once</text></g><g><title>revm::instructions::i256::tests::benchmark_div (7,864 samples, 97.42%)</title><rect x="2.4158%" y="373" width="97.4232%" height="15" fill="rgb(215,133,35)" fg:x="195" fg:w="7864"/><text x="2.6658%" y="383.50">revm::instructions::i256::tests::benchmark_div</text></g><g><title>revm::instructions::i256::div_u256::div_mod (7,852 samples, 97.27%)</title><rect x="2.5644%" y="357" width="97.2745%" height="15" fill="rgb(213,28,5)" fg:x="207" fg:w="7852"/><text x="2.8144%" y="367.50">revm::instructions::i256::div_u256::div_mod</text></g><g><title>revm::instructions::i256::div_u256::words (8 samples, 0.10%)</title><rect x="99.7398%" y="341" width="0.0991%" height="15" fill="rgb(215,77,49)" fg:x="8051" fg:w="8"/><text x="99.9898%" y="351.50"></text></g><g><title>instructions::i (8,060 samples, 99.85%)</title><rect x="0.0000%" y="757" width="99.8513%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="8060"/><text x="0.2500%" y="767.50">instructions::i</text></g><g><title>__GI___clone (7,865 samples, 97.44%)</title><rect x="2.4158%" y="741" width="97.4356%" height="15" fill="rgb(208,67,9)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="751.50">__GI___clone</text></g><g><title>start_thread (7,865 samples, 97.44%)</title><rect x="2.4158%" y="725" width="97.4356%" height="15" fill="rgb(219,133,21)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="735.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7,865 samples, 97.44%)</title><rect x="2.4158%" y="709" width="97.4356%" height="15" fill="rgb(246,46,29)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="719.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,865 samples, 97.44%)</title><rect x="2.4158%" y="693" width="97.4356%" height="15" fill="rgb(246,185,52)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="703.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,865 samples, 97.44%)</title><rect x="2.4158%" y="677" width="97.4356%" height="15" fill="rgb(252,136,11)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7,865 samples, 97.44%)</title><rect x="2.4158%" y="661" width="97.4356%" height="15" fill="rgb(219,138,53)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="671.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7,865 samples, 97.44%)</title><rect x="2.4158%" y="645" width="97.4356%" height="15" fill="rgb(211,51,23)" fg:x="195" fg:w="7865"/><text x="2.6658%" y="655.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="99.8389%" y="629" width="0.0124%" height="15" fill="rgb(247,221,28)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="639.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.01%)</title><rect x="99.8389%" y="613" width="0.0124%" height="15" fill="rgb(251,222,45)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="99.8389%" y="597" width="0.0124%" height="15" fill="rgb(217,162,53)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="607.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="99.8389%" y="581" width="0.0124%" height="15" fill="rgb(229,93,14)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="591.50"></text></g><g><title>tcache_init (1 samples, 0.01%)</title><rect x="99.8389%" y="565" width="0.0124%" height="15" fill="rgb(209,67,49)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="575.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="99.8389%" y="549" width="0.0124%" height="15" fill="rgb(213,87,29)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="559.50"></text></g><g><title>arena_get2 (1 samples, 0.01%)</title><rect x="99.8389%" y="533" width="0.0124%" height="15" fill="rgb(205,151,52)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="543.50"></text></g><g><title>_int_new_arena (1 samples, 0.01%)</title><rect x="99.8389%" y="517" width="0.0124%" height="15" fill="rgb(253,215,39)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="527.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="99.8389%" y="501" width="0.0124%" height="15" fill="rgb(221,220,41)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="485" width="0.0124%" height="15" fill="rgb(218,133,21)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="469" width="0.0124%" height="15" fill="rgb(221,193,43)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="453" width="0.0124%" height="15" fill="rgb(240,128,52)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="437" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="421" width="0.0124%" height="15" fill="rgb(215,223,47)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="405" width="0.0124%" height="15" fill="rgb(248,225,23)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="389" width="0.0124%" height="15" fill="rgb(250,108,0)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="373" width="0.0124%" height="15" fill="rgb(228,208,7)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="357" width="0.0124%" height="15" fill="rgb(244,45,10)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="341" width="0.0124%" height="15" fill="rgb(207,125,25)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="325" width="0.0124%" height="15" fill="rgb(210,195,18)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8389%" y="309" width="0.0124%" height="15" fill="rgb(249,80,12)" fg:x="8059" fg:w="1"/><text x="100.0889%" y="319.50"></text></g><g><title>perf (5 samples, 0.06%)</title><rect x="99.8513%" y="757" width="0.0619%" height="15" fill="rgb(221,65,9)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="741" width="0.0619%" height="15" fill="rgb(235,49,36)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="725" width="0.0619%" height="15" fill="rgb(225,32,20)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="709" width="0.0619%" height="15" fill="rgb(215,141,46)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="693" width="0.0619%" height="15" fill="rgb(250,160,47)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="677" width="0.0619%" height="15" fill="rgb(216,222,40)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="661" width="0.0619%" height="15" fill="rgb(234,217,39)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="645" width="0.0619%" height="15" fill="rgb(207,178,40)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="629" width="0.0619%" height="15" fill="rgb(221,136,13)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="613" width="0.0619%" height="15" fill="rgb(249,199,10)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="597" width="0.0619%" height="15" fill="rgb(249,222,13)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="581" width="0.0619%" height="15" fill="rgb(244,185,38)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="565" width="0.0619%" height="15" fill="rgb(236,202,9)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="549" width="0.0619%" height="15" fill="rgb(250,229,37)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.8513%" y="533" width="0.0619%" height="15" fill="rgb(206,174,23)" fg:x="8060" fg:w="5"/><text x="100.1013%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="741" width="0.0124%" height="15" fill="rgb(211,33,43)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="725" width="0.0124%" height="15" fill="rgb(245,58,50)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="709" width="0.0124%" height="15" fill="rgb(244,68,36)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="693" width="0.0124%" height="15" fill="rgb(232,229,15)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="677" width="0.0124%" height="15" fill="rgb(254,30,23)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="661" width="0.0124%" height="15" fill="rgb(235,160,14)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="645" width="0.0124%" height="15" fill="rgb(212,155,44)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="629" width="0.0124%" height="15" fill="rgb(226,2,50)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="613" width="0.0124%" height="15" fill="rgb(234,177,6)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="597" width="0.0124%" height="15" fill="rgb(217,24,9)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="581" width="0.0124%" height="15" fill="rgb(220,13,46)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9133%" y="565" width="0.0124%" height="15" fill="rgb(239,221,27)" fg:x="8065" fg:w="1"/><text x="100.1633%" y="575.50"></text></g><g><title>__GI___clone (5 samples, 0.06%)</title><rect x="99.9257%" y="741" width="0.0619%" height="15" fill="rgb(222,198,25)" fg:x="8066" fg:w="5"/><text x="100.1757%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9257%" y="725" width="0.0619%" height="15" fill="rgb(211,99,13)" fg:x="8066" fg:w="5"/><text x="100.1757%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="99.9257%" y="709" width="0.0619%" height="15" fill="rgb(232,111,31)" fg:x="8066" fg:w="5"/><text x="100.1757%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="693" width="0.0496%" height="15" fill="rgb(245,82,37)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="677" width="0.0496%" height="15" fill="rgb(227,149,46)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="661" width="0.0496%" height="15" fill="rgb(218,36,50)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="645" width="0.0496%" height="15" fill="rgb(226,80,48)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="629" width="0.0496%" height="15" fill="rgb(238,224,15)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="99.9381%" y="613" width="0.0496%" height="15" fill="rgb(241,136,10)" fg:x="8067" fg:w="4"/><text x="100.1881%" y="623.50"></text></g><g><title>all (8,072 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="8072"/><text x="0.2500%" y="783.50"></text></g><g><title>revm-8221a43e25 (7 samples, 0.09%)</title><rect x="99.9133%" y="757" width="0.0867%" height="15" fill="rgb(207,135,9)" fg:x="8065" fg:w="7"/><text x="100.1633%" y="767.50"></text></g><g><title>_start (1 samples, 0.01%)</title><rect x="99.9876%" y="741" width="0.0124%" height="15" fill="rgb(206,86,44)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="751.50"></text></g><g><title>_dl_start (1 samples, 0.01%)</title><rect x="99.9876%" y="725" width="0.0124%" height="15" fill="rgb(245,177,15)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="735.50"></text></g><g><title>_dl_start_final (1 samples, 0.01%)</title><rect x="99.9876%" y="709" width="0.0124%" height="15" fill="rgb(206,64,50)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="719.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.01%)</title><rect x="99.9876%" y="693" width="0.0124%" height="15" fill="rgb(234,36,40)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="703.50"></text></g><g><title>dl_main (1 samples, 0.01%)</title><rect x="99.9876%" y="677" width="0.0124%" height="15" fill="rgb(213,64,8)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="687.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="99.9876%" y="661" width="0.0124%" height="15" fill="rgb(210,75,36)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="671.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="99.9876%" y="645" width="0.0124%" height="15" fill="rgb(229,88,21)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="655.50"></text></g><g><title>elf_machine_lazy_rel (1 samples, 0.01%)</title><rect x="99.9876%" y="629" width="0.0124%" height="15" fill="rgb(252,204,47)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="639.50"></text></g><g><title>__cosf_ifunc (1 samples, 0.01%)</title><rect x="99.9876%" y="613" width="0.0124%" height="15" fill="rgb(208,77,27)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9876%" y="597" width="0.0124%" height="15" fill="rgb(221,76,26)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9876%" y="581" width="0.0124%" height="15" fill="rgb(225,139,18)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9876%" y="565" width="0.0124%" height="15" fill="rgb(230,137,11)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9876%" y="549" width="0.0124%" height="15" fill="rgb(212,28,1)" fg:x="8071" fg:w="1"/><text x="100.2376%" y="559.50"></text></g></svg></svg>